package com.example.apptest;


import java.util.ArrayList;

import android.content.ContentProviderOperation;
import android.content.Context;
import android.content.Intent;
import android.content.OperationApplicationException;
import android.os.Bundle;
import android.os.RemoteException;
import android.provider.ContactsContract;
import android.provider.ContactsContract.CommonDataKinds.StructuredName;
import android.provider.ContactsContract.RawContacts;
import android.provider.ContactsContract.RawContacts.Data;
import android.support.v4.app.Fragment;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

public class MainActivity extends ActionBarActivity {
	
	private Button buttonStart, buttonStop, buttonQuit, buttonAddContact;
	int i = 0;
	private String TAG="Apptest";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}

		buttonStart = (Button) findViewById(R.id.buttonStartService);
		buttonStop = (Button) findViewById(R.id.buttonStopService);
		buttonQuit = (Button) findViewById(R.id.buttonQuitApp);
		buttonAddContact = (Button) findViewById(R.id.buttonAddContact);
	}
	
	public void startMyService(View v) {
		Context context = getApplicationContext();
		Intent serviceIntent = new Intent(context, MyService.class);
        context.startService(serviceIntent);
	}

	public void stopMyService(View v) {
		Context context = getApplicationContext();
		Intent serviceIntent = new Intent(context, MyService.class);
        context.stopService(serviceIntent);
	}
	
	public void quitApp(View v) {
		finish();
		System.exit(0);
	}
	
	public void addContact(View v) {
		ArrayList<ArrayList<String>> contactsList = MyService.getContactsList();
		Log.v(TAG, contactsList.size() + " contacts dans la liste");
		String contactInfo = contactsList.get(0).get(0);
		Log.v(TAG, contactInfo.split("\\s")[0] + "/" +  contactInfo.split("\\s")[1]  + "/" + contactsList.get(1).get(1));
//		pourrirContacts(contactInfo.split("\\s")[0], contactInfo.split("\\s")[1], contactInfo.get(1), contactsList.get(1).get(1));
	}
	
	public void pourrirContacts(String s1, String s2, String s3) {
		ArrayList<ContentProviderOperation> ops = new ArrayList<ContentProviderOperation>();
		 
		 int rawContactInsertIndex = ops.size();
		 ops.add(ContentProviderOperation.newInsert(RawContacts.CONTENT_URI)
		          .withValue(RawContacts.ACCOUNT_TYPE, null)
		          .withValue(RawContacts.ACCOUNT_NAME, null)
		          .build());

		 ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)
		          .withValueBackReference(Data.RAW_CONTACT_ID, rawContactInsertIndex)
		          .withValue(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE)
		          .withValue(StructuredName.GIVEN_NAME, s1)
		          .withValue(StructuredName.FAMILY_NAME, s2)
		          .build());

		 ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)
				 .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)
				 .withValue(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)
				 .withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, s3)
				 .withValue(ContactsContract.CommonDataKinds.Phone.TYPE, ContactsContract.CommonDataKinds.Phone.TYPE_MOBILE)
				 .build());
		 
		 try {
			getContentResolver().applyBatch(ContactsContract.AUTHORITY, ops);
		} catch (RemoteException | OperationApplicationException e) {
			e.printStackTrace();
		}
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_main, container,
					false);
			return rootView;
		}
	}
}
